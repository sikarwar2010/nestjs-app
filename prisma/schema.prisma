// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
    id        String    @id @default(cuid())
    email     String    @unique
    name      String?
    posts     Post[]
    createdAt DateTime  @default(now())
    updatedAt DateTime  @updatedAt
    Profile   Profile[]
    Like      Like[]
    role      Role      @default(USER)
}

enum Role {
    USER
    ADMIN
}

model Post {
    id        String    @id @default(cuid())
    title     String
    content   String
    published Boolean   @default(false)
    author    User      @relation(fields: [authorId], references: [id])
    authorId  String
    createdAt DateTime  @default(now())
    updatedAt DateTime  @updatedAt
    Comment   Comment[]
    Like      Like[]
}

model Profile {
    id        String   @id @default(cuid())
    bio       String?
    user      User     @relation(fields: [userId], references: [id])
    userId    String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Comment {
    id        String   @id @default(cuid())
    content   String
    post      Post     @relation(fields: [postId], references: [id])
    postId    String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Like {
    id        String   @id @default(cuid())
    post      Post     @relation(fields: [postId], references: [id])
    postId    String
    user      User     @relation(fields: [userId], references: [id])
    userId    String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}
